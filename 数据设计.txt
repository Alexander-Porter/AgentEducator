# 闻道：基于课程教学数据的内容推荐和个性化智能答疑系统
# 数据设计章节

## 1. 数据库设计概述

闻道平台是一个融合大型语言模型的智能学习平台，其数据设计围绕用户、课程、视频和AI功能等核心业务实体展开。系统采用关系型数据库MySQL作为数据存储基础，通过SQLAlchemy ORM框架进行数据操作，实现了业务逻辑与数据访问的解耦。

数据库架构设计遵循以下原则：
- 实体完整性：每个表都有唯一标识的主键，使用UUID确保全局唯一性
- 引用完整性：通过外键约束维护实体间关系
- 业务完整性：使用约束和触发器保证业务规则实现
- 可扩展性：模块化设计，便于未来功能扩展
- 数据追溯：关键操作记录创建和更新时间

## 2. 核心数据实体

### 2.1 用户数据模型

用户是系统的基础，分为教师和学生两种角色，通过Users表实现统一管理。用户数据模型包含基本信息、认证信息和状态信息。用户与其他实体的关联通过外键和关系映射实现。

特点：
- 统一用户表，通过role字段区分用户角色
- 邮箱和用户名唯一性保证
- 支持逻辑删除，保留历史数据
- UUID主键提高安全性

字段设计：
- id: UUID类型主键，全局唯一标识用户
- username: 用户登录名，唯一
- password: 加密存储的密码
- email: 电子邮箱，唯一
- role: 用户角色（teacher/student）
- avatar: 用户头像URL
- create_time/update_time: 创建和更新时间戳
- is_deleted: 逻辑删除标记

### 2.2 课程数据模型

课程是教学内容的组织单元，通过Course表实现。课程与教师是一对多关系，一个教师可以教授多门课程。课程与学生是多对多关系，通过StudentCourseEnrollment关联表实现。

特点：
- 丰富的课程元数据，便于检索和展示
- 灵活的状态管理，支持课程生命周期
- 学期与课时管理，符合教学实际
- 统计数据缓存，如学生数量

字段设计：
- id: UUID类型主键
- name: 课程名称
- code: 课程代码，便于检索
- description: 课程描述
- image_url: 课程封面图
- start_date/end_date: 课程时间段
- hours: 课时数
- student_count: 选课人数
- status: 课程状态（active/inactive）
- semester: 学期信息
- teacher_id: 教师外键
- create_time/update_time: 时间戳
- is_deleted: 逻辑删除标记

### 2.3 视频数据模型

视频是平台核心的学习内容，通过Video表实现。每个视频关联到特定课程，并包含丰富的元数据和统计信息。

特点：
- 完整的视频元数据支持
- 智能分析结果存储
- 用户交互数据统计
- 多媒体资源管理

字段设计：
- id: UUID类型主键
- title: 视频标题
- description: 视频描述
- cover_url: 封面图
- video_url: 视频文件URL
- duration: 视频时长(秒)
- course_id: 关联课程外键
- view_count: 观看次数
- comment_count: 评论数量
- completed_count: 完成观看人数
- upload_time: 上传时间
- is_deleted: 逻辑删除标记

### 2.4 学习进度模型

学习进度是个性化学习体验的基础，通过UserVideoProgress表记录每个学生对每个视频的学习状态和进度。

特点：
- 精确记录学习位置
- 支持断点续播
- 学习完成状态跟踪
- 多维度学习数据分析

字段设计：
- id: UUID类型主键
- user_id: 用户外键
- video_id: 视频外键
- progress: 进度比例(0-1)
- last_position: 上次观看位置(秒)
- completed: 是否完成观看
- update_time: 更新时间

## 3. 智能AI特性数据模型

### 3.1 视频摘要模型

系统自动生成视频内容摘要，通过VideoSummary表存储。每个视频对应一条摘要记录，包含主要知识点、关键词和章节信息。

特点：
- 结构化知识点提取
- 关键词索引支持
- 章节划分逻辑保存
- JSON格式灵活存储

字段设计：
- id: UUID类型主键
- video_id: 视频外键
- main_points: 主要观点文本
- keywords: 关键词列表
- sections: JSON格式章节摘要
- generate_time: 生成时间

### 3.2 视频关键帧模型

视频关键帧是AI分析的基础单元，通过VideoKeyframe表存储。系统提取视频关键帧，并进行OCR(光学字符识别)和ASR(语音识别)处理。

特点：
- 多模态内容提取
- 结构化存储文本内容
- 精确时间点标记
- 支持智能检索

字段设计：
- id: 自增主键
- video_id: 视频外键
- frame_number: 帧编号
- time_point: 时间点(秒)
- time_formatted: 格式化时间
- file_name: 关键帧图片文件名
- ocr_result: OCR识别结果(JSON)
- asr_texts: 语音识别文本
- create_time: 创建时间

### 3.3 向量索引模型

向量索引是实现语义搜索和智能问答的基础，通过VideoVectorIndex表管理。系统为每个视频创建向量索引，支持基于内容的相似度检索。

特点：
- 支持高维向量存储
- 模型版本管理
- 索引文件路径记录
- 向量统计信息

字段设计：
- id: 自增主键
- video_id: 视频外键
- index_path: 索引文件路径
- embedding_model: 嵌入模型名称
- total_vectors: 向量总数
- create_time/update_time: 时间戳

### 3.4 视频处理任务模型

视频智能处理涉及多个异步任务，通过VideoProcessingTask表跟踪任务状态和进度。

特点：
- 任务状态生命周期管理
- 进度实时更新
- 错误追踪与恢复
- 多种处理类型支持

字段设计：
- id: UUID类型主键
- video_id: 视频外键
- task_id: 任务唯一标识
- status: 任务状态(pending/processing/completed/failed)
- processing_type: 处理类型
- progress: 处理进度(0-100)
- error_message: 错误信息
- start_time/end_time: 开始和结束时间

## 4. 交互与社交数据模型

### 4.1 视频评论模型

视频评论实现师生和生生之间的交流，通过VideoComment表存储。支持对视频特定时间点的评论和评论的多级回复。

特点：
- 分层评论结构设计
- 时间点关联评论
- 点赞统计支持
- 逻辑删除机制

字段设计：
- id: UUID类型主键
- content: 评论内容
- video_id: 视频外键
- user_id: 用户外键
- parent_id: 父评论ID(用于回复)
- time_point: 视频时间点(秒)
- create_time: 创建时间
- likes: 点赞数
- is_deleted: 逻辑删除标记

### 4.2 课程选修模型

学生选修课程的数据通过StudentCourseEnrollment表维护，实现了用户与课程的多对多关系。

特点：
- 唯一约束确保不重复选课
- 选课时间记录
- 支持选课状态扩展
- 简洁高效的关系设计

字段设计：
- id: UUID类型主键
- student_id: 学生外键
- course_id: 课程外键
- enroll_time: 选课时间

## 5. 权限与访问控制

### 5.1 用户权限模型

系统实现了细粒度的权限控制，通过UserPermission表管理用户对特定资源的访问权限。

特点：
- 基于课程的访问控制
- 功能级权限设置
- JSON格式灵活权限记录
- 动态权限调整支持

字段设计：
- id: UUID类型主键
- user_id: 用户外键
- course_access: 可访问课程列表(JSON)
- comment_enabled: 评论权限
- download_enabled: 下载权限
- update_time: 更新时间

## 6. 数据关系设计

系统通过外键约束和ORM关系映射，实现了实体间的有机关联。主要关系包括：

### 6.1 一对多关系
- 教师(Users) 1:N 课程(Course)：一个教师可以教授多个课程
- 课程(Course) 1:N 视频(Video)：一个课程包含多个视频
- 课程(Course) 1:N 文档(Document)：一个课程包含多个文档
- 用户(Users) 1:N 评论(VideoComment)：一个用户可发表多个评论
- 视频(Video) 1:N 评论(VideoComment)：一个视频有多个评论
- 视频(Video) 1:N 关键帧(VideoKeyframe)：一个视频有多个关键帧
- 评论(VideoComment) 1:N 回复(VideoComment)：评论支持多级回复

### 6.2 一对一关系
- 视频(Video) 1:1 摘要(VideoSummary)：一个视频有一个摘要
- 用户(Users) 1:1 权限(UserPermission)：一个用户有一个权限记录

### 6.3 多对多关系
- 学生(Users) M:N 课程(Course)：通过StudentCourseEnrollment关联表实现
- 用户(Users) M:N 视频(Video)：通过UserVideoProgress关联表实现进度记录

## 7. 数据库优化设计

系统在数据库设计层面进行了多项优化：

### 7.1 性能优化
- 合理的索引策略：主键、外键和常用查询字段建立索引
- 使用UUID作为主键，避免自增ID的局限性
- 数据分区与分表设计，为大规模数据做准备
- 使用逻辑删除代替物理删除，提高数据完整性

### 7.2 数据安全
- 密码加密存储
- 数据访问权限控制
- 敏感数据隔离
- 数据备份与恢复机制

### 7.3 扩展性设计
- JSON字段存储灵活结构数据
- 预留扩展字段
- 松耦合的表关系设计
- 模块化的数据架构

## 8. 数据流设计

系统主要数据流包括：

### 8.1 课程内容数据流
教师 → 课程创建 → 视频上传 → 视频处理 → 内容分析 → 向量索引生成 → 学生访问

### 8.2 学习进度数据流
学生 → 视频播放 → 进度记录 → 数据分析 → 学习报告 → 个性化推荐

### 8.3 交互数据流
用户 → 提交评论/问题 → 数据存储 → AI分析 → 智能回复/推荐

### 8.4 权限控制数据流
管理员 → 设置权限 → 权限验证 → 资源访问控制

## 9. 未来数据设计展望

随着系统的发展，数据设计将向以下方向演进：

### 9.1 数据规模扩展
- 分布式数据存储架构
- 冷热数据分离策略
- 时序数据专业化存储

### 9.2 AI能力增强
- 多模态数据融合
- 知识图谱构建
- 个性化学习路径推荐
- 学习行为模式挖掘

### 9.3 数据安全增强
- 数据脱敏方案
- 基于区块链的数据确权
- 细粒度数据访问控制

通过科学合理的数据设计，闻道平台为实现智能化、个性化的教育体验提供了坚实的数据基础，同时也为未来功能扩展和性能优化留出了充分的空间。 